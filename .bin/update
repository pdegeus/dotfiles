#!/usr/bin/env bash

# Ask for the administrator password upfront
sudo -v || exit 1;

# Keep-alive: update existing `sudo` time stamp until script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

if [[ -d "~/Development/dotfiles" ]]; then
	cd ~/Development/dotfiles
	./bootstrap.sh
elif [[ -d "~/dotfiles" ]]; then
	cd ~/dotfiles
	./bootstrap.sh
fi

if [[ `uname -s` = "Darwin" ]]; then
    echo "-------------------------------------------"
    echo "Detected OSX, performing software update..."
    echo "-------------------------------------------"
    sudo softwareupdate -i -a
    echo
    
    PORT=`port version 2>/dev/null`
    if [[ "$PORT" != "" ]]; then
        echo "-------------------------------------------"
        echo "Found MacPorts $PORT, updating..."
        echo "-------------------------------------------"
        sudo port selfupdate
        sudo port upgrade outdated
        echo
    fi

	BREW=`brew --config | grep HOMEBREW_VERSION | sed -e 's/HOMEBREW_VERSION: \(.*\)/\1/' 2>/dev/null`
	if [[ "$BREW" != "" ]]; then
        echo "-------------------------------------------"
        echo "Found Brew $BREW, updating..."
        echo "-------------------------------------------"
		brew update
		brew upgrade
		brew cleanup
        echo
	fi
    
elif [[ `whereis apt-get` != "" ]]; then
    echo "-------------------------------------------"
    echo "Detected APT, performing update & upgrade..."
    echo "-------------------------------------------"
    sudo apt-get update
	sudo apt-get autoremove
    sudo apt-get upgrade
	sudo apt-get autoremove
    echo
else
    echo "Sorry, no supported update mechanism found."
fi

